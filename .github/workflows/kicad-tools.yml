name: kicad-tools

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  kicad:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v2
        
      - uses: actions/cache@v1
        id: kicad-tools-cache
        with:
          path: /opt/kicad-tools
          key: ${{ runner.os }}-kicad

#      - uses: actions/cache@v1
#        id: docker-cache
#        with:
#          path: ????
#          key: ${{ runner.os }}-docker

      - name: config git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          #git config --global filter.kicad_project.clean "sed -E 's/^update=.*$/update=Date/'"
          #git config --global filter.kicad_project.smudge cat
          #git config --global filter.gerber.clean "sed -E 's/^CreationDate=.*$/CreationDate=Date/'"
          #git config --global filter.gerber.smudge cat
          #git config --global filter.kicad_sch.clean "sed -E 's/#(PWR|FLG)[0-9]+/#\1?/'"
          #git config --global filter.kicad_sch.smudge cat

      - name: install kicad-tools
        if: steps.kicad-tools-cache.outputs.cache-hit != 'true'
        run: git clone --branch=ci https://github.com/nnarain/kicad-tools /opt/kicad-tools
        
      - name: generate KiCAD output
        if: success()
        id: kicad-tools-run
        env:
          DOCKER_CONTAINER: nnarain/kicad-tools
          DOCKER_INTERACTIVE: ""
          KICAD_TOOLS_PATH: /opt/kicad-tools
        run: cp /opt/kicad-tools/etc/Makefile ./Makefile && make fabrication-outputs

      - name: move output files
        if: success()
        run: |
          PROJECT=$(basename "$PWD") 
          mkdir -p docs/bom && cp -u $(find out/ -name "bom.csv") "docs/bom/"$PROJECT"_bom.csv"
          mkdir -p docs/bom && cp -u $(find out/ -name "ibom.html") "docs/bom/index.html"
          mkdir -p docs && cp -u $(find out/ -name $PROJECT".pdf") "docs/"$PROJECT"_schematic.pdf"
          mkdir -p docs && cp -u $(find out/ -name $PROJECT".svg") "docs/"$PROJECT"_schematic.svg"
          mkdir -p gerber && cp -u $(find out/ -type f \( -iname \*.gbr -o -iname \*.drl \)) gerber/
          #mkdir -p gerber && cp -u $(find out/ -name $PROJECT"*.pos") "gerber/"$PROJECT".pos"

      - name: run tracespace
        if: success()
        run: |
          PROJECT=$(basename "$PWD") 
          sudo npm install -g @tracespace/cli
          tracespace -L --out=out/ gerber/*Edge_Cuts.gbr gerber/*.drl gerber/*F*Cu.gbr gerber/*Mask.gbr gerber/*F*Paste.gbr gerber/*F*SilkS.gbr
          mkdir -p docs/img && mv -u $(find out/ -name $PROJECT"*top.svg") "docs/img/"$PROJECT"_layout_top.svg"
          tracespace -L --out=out/ gerber/*Edge_Cuts.gbr gerber/*.drl gerber/*B*Cu.gbr gerber/*Mask.gbr gerber/*B*Paste.gbr gerber/*B*SilkS.gbr
          mkdir -p docs/img && mv -u $(find out/ -name $PROJECT"*bottom.svg") "docs/img/"$PROJECT"_layout_bottom.svg"
          tracespace -L --out=out/ gerber/*Edge_Cuts.gbr gerber/*.drl gerber/*F*Fab.gbr
          mkdir -p docs/img && mv -u $(find out/ -name $PROJECT"*top.svg") "docs/img/"$PROJECT"_assembly_top.svg"
          tracespace -L --out=out/ gerber/*Edge_Cuts.gbr gerber/*.drl gerber/*B*Fab.gbr
          mkdir -p docs/img && mv -u $(find out/ -name $PROJECT"*bottom.svg") "docs/img/"$PROJECT"_assembly_bottom.svg"

      - name: remove output files
        if: success()
        run: sudo rm -r out/

      - name: Check if there are changes
        id: changes
        uses: UnicornGlobal/has-changes-action@v1.0.11

# update results
      - name: push results
        if: steps.changes.outputs.changed == 1
        run: |
          git add docs/* gerber/*
          git commit -m "auto generated by Github Actions"
          git reset --hard
          git pull --rebase

      - name: Push changes
        if: steps.changes.outputs.changed == 1
        uses: ad-m/github-push-action@master
        with:
          branch: 'dev'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: 'false'
